{"ast":null,"code":"import _defineProperty from \"/Users/johnyoo/Desktop/MyProjects/react_forum/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport posts from '../apis/posts';\nimport _ from 'lodash';\nimport history from '../history';\nexport const createPost = formValues => async dispatch => {\n  const response = await posts.post('/posts', _objectSpread({}, formValues));\n  dispatch({\n    type: 'CREATE_POSTS',\n    payload: response.data\n  });\n  history.push('/');\n};\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\n  await dispatch(fetchPosts());\n\n  const userIds = _.uniq(_.map(getState().posts, 'userId'));\n\n  userIds.forEach(id => dispatch(fetchUser(id)));\n};\nexport const fetchPosts = () => async dispatch => {\n  const response = await posts.get('/posts');\n  dispatch({\n    type: 'FETCH_POSTS',\n    payload: response.data\n  });\n};\nexport const fetchUser = id => async dispatch => {\n  const response = await posts.get(\"/streams/\".concat(id));\n  dispatch({\n    type: 'FETCH_USER',\n    payload: response.data\n  });\n};\n/*\nexport const fetchPosts = () => async dispatch => {\n\tconst response = await jsonPlaceholder.get('/posts');\n\n\tdispatch({type: 'FETCH_POSTS', payload: response.data}) \n};\n\nexport const fetchUser = id => async dispatch => {\n\tconst response = await jsonPlaceholder.get('/users/' + id);\n\n\tdispatch({type: 'FETCH_USER', payload: response.data});\n};\n*/","map":{"version":3,"sources":["/Users/johnyoo/Desktop/MyProjects/react_forum/src/actions/index.js"],"names":["posts","_","history","createPost","formValues","dispatch","response","post","type","payload","data","push","fetchPostsAndUsers","getState","fetchPosts","userIds","uniq","map","forEach","id","fetchUser","get"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,eAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,OAAO,MAAMC,UAAU,GAAGC,UAAU,IAAI,MAAOC,QAAP,IAAoB;AAC3D,QAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAN,CAAW,QAAX,oBAAyBH,UAAzB,EAAvB;AACAC,EAAAA,QAAQ,CAAC;AAACG,IAAAA,IAAI,EAAE,cAAP;AAAuBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAzC,GAAD,CAAR;AACAR,EAAAA,OAAO,CAACS,IAAR,CAAa,GAAb;AACA,CAJM;AAMP,OAAO,MAAMC,kBAAkB,GAAG,MAAM,OAAOP,QAAP,EAAiBQ,QAAjB,KAA8B;AACrE,QAAMR,QAAQ,CAACS,UAAU,EAAX,CAAd;;AACA,QAAMC,OAAO,GAAGd,CAAC,CAACe,IAAF,CAAOf,CAAC,CAACgB,GAAF,CAAMJ,QAAQ,GAAGb,KAAjB,EAAwB,QAAxB,CAAP,CAAhB;;AACAe,EAAAA,OAAO,CAACG,OAAR,CAAgBC,EAAE,IAAId,QAAQ,CAACe,SAAS,CAACD,EAAD,CAAV,CAA9B;AACA,CAJM;AAMP,OAAO,MAAML,UAAU,GAAG,MAAM,MAAMT,QAAN,IAAkB;AACjD,QAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACqB,GAAN,CAAU,QAAV,CAAvB;AAEAhB,EAAAA,QAAQ,CAAC;AAACG,IAAAA,IAAI,EAAE,aAAP;AAAsBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAxC,GAAD,CAAR;AACA,CAJM;AAMP,OAAO,MAAMU,SAAS,GAAGD,EAAE,IAAI,MAAMd,QAAN,IAAkB;AAChD,QAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACqB,GAAN,oBAAsBF,EAAtB,EAAvB;AAEAd,EAAAA,QAAQ,CAAC;AAACG,IAAAA,IAAI,EAAE,YAAP;AAAqBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAvC,GAAD,CAAR;AACA,CAJM;AAMP","sourcesContent":["import posts from '../apis/posts';\nimport _ from 'lodash';\nimport history from '../history';\n\nexport const createPost = formValues => async (dispatch) => {\n\tconst response = await posts.post('/posts', {...formValues});\n\tdispatch({type: 'CREATE_POSTS', payload: response.data});\n\thistory.push('/');\n};\n\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\n\tawait dispatch(fetchPosts());\n\tconst userIds = _.uniq(_.map(getState().posts, 'userId'));\n\tuserIds.forEach(id => dispatch(fetchUser(id)));\n};\n\nexport const fetchPosts = () => async dispatch => {\n\tconst response = await posts.get('/posts');\n\n\tdispatch({type: 'FETCH_POSTS', payload: response.data}) \n};\n\nexport const fetchUser = id => async dispatch => {\n\tconst response = await posts.get(`/streams/${id}`);\n\n\tdispatch({type: 'FETCH_USER', payload: response.data});\n};\n\n/*\nexport const fetchPosts = () => async dispatch => {\n\tconst response = await jsonPlaceholder.get('/posts');\n\n\tdispatch({type: 'FETCH_POSTS', payload: response.data}) \n};\n\nexport const fetchUser = id => async dispatch => {\n\tconst response = await jsonPlaceholder.get('/users/' + id);\n\n\tdispatch({type: 'FETCH_USER', payload: response.data});\n};\n*/"]},"metadata":{},"sourceType":"module"}